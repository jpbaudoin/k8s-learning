

#######
name: release

# Controls when the action will run.
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: ['feature/ci_workflow']
    # tags:
    #   - 'v*.*.*' 

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_and_push_to_registry:
    name: Build and push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      # Publish the images
      - name: Login to GitHub Packages
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Lowercase repository name
        run: |
          echo "REPO=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
      
      - name: Get the tag value
        id: vars
        run: |
         echo ::set-output name=RELEASE_TAG::${GITHUB_REF/refs\/tags\//}
         echo ::set-output name=RELEASE_TAG_TMP::v0.0.2

      # - name: Check Release ID manual
      #   run: |
      #     echo "version: ${RELEASE}"
      #   env:
      #     RELEASE: ${{ steps.vars.outputs.RELEASE_TAG_TMP }}


      # - name: Check Release ID - Tag
      #   run: |
      #     echo "version: ${RELEASE}"
      #   env:
      #     RELEASE: ${{ steps.vars.outputs.RELEASE_TAG }}

      - uses: azure/setup-helm@v1
        id: install
        with:
          version: v3.4.0

      - name: Run chart-releaser
        #uses: helm/chart-releaser-action@v1.2.1
        uses: jpbaudoin/chart-releaser-action@main
        
        with:
          #version: ${{ steps.vars.outputs.RELEASE_TAG_TMP }}
          charts_dir: charts
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

          
      # - name: Create helm package
      #   run: |
      #     helm package --version ${RELEASE} kubemq-test-drive
      #   env:
      #     RELEASE: ${{ steps.vars.outputs.RELEASE_TAG_TMP }}

      # - name: Push Helm pkg to packe repository
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: kubemq-test-drive-${{ steps.vars.outputs.RELEASE_TAG_TMP }}.tgz
      #     path: ./kubemq-test-drive-${{ steps.vars.outputs.RELEASE_TAG_TMP }}.tgz


      # - name: Push Helm pkg to packe repository
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: kubemq-test-drive-${{ steps.vars.outputs.RELEASE_TAG }}.tgz
      #     path: ./kubemq-test-drive-${{ steps.vars.outputs.RELEASE_TAG }}.tgz


# Docker images
      # - name: Build and push to GitHub Packages - Sender
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./dev/sender/
      #     file: ./dev/sender/Dockerfile
      #     push: true
      #     tags: docker.pkg.github.com/${{ env.REPO }}/sender:${{ steps.vars.outputs.RELEASE_TAG }}

      # - name: Build and push to GitHub Packages - Receiver
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./dev/receiver
      #     file: ./dev/receiver/Dockerfile
      #     push: true
      #     tags: docker.pkg.github.com/${{ env.REPO }}/receiver:${{ steps.vars.outputs.RELEASE_TAG }}

      # - name: Build and push to GitHub Packages - Receiver2
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./dev/receiver2
      #     file: ./dev/receiver2/Dockerfile
      #     push: true
      #     tags: docker.pkg.github.com/${{ env.REPO }}/receiver2:${{ steps.vars.outputs.RELEASE_TAG }}

# Helm pacakge
      # Download helm3


